{"version":3,"sources":["assets/images/icons/mic_on.png","assets/images/icons/mic_off.png","components/CommandsModal.js","components/Settings.js","helpers/TodoAPIHelper.js","pages/Todos/TodoForm.js","assets/sounds/testing/hilo_sparkle.mp3","assets/sounds/testing/Bells10.mp3","assets/sounds/testing/Bells11.mp3","assets/sounds/testing/Mech-Drone-12.mp3","assets/sounds/testing/PowerDown7.mp3","assets/sounds/testing/PowerUp18.mp3","assets/sounds/testing/SynthChime8.mp3","assets/sounds/testing/SynthChime9.mp3","assets/sounds/testing/SynthChime11.mp3","assets/sounds/testing/UI_Quirky7.mp3","assets/sounds/testing/UI_Quirky8.mp3","assets/sounds/testing/sprinkle.mp3","assets/sounds/testing/lowTuTone.mp3","assets/sounds/testing/heard.mp3","assets/sounds/testing/timer.mp3","pages/VirtualAssistant/VirtualAssistant.js","hooks/useCommandsModal.js","demo/VoiceSynthesizer/VoiceSynthesizer.js","pages/Dashboard/Dashboard.js","pages/Login/Login.js","pages/Register/Register.js","App.js","index.js"],"names":["CommandsModal","isShowing","hide","ReactDOM","createPortal","Fragment","className","aria-modal","aria-hidden","tabIndex","role","type","data-dismiss","aria-label","onClick","document","body","Settings","props","voices","useSpeechSynthesis","style","height","htmlFor","width","id","name","value","voiceIndex","onChange","e","setVoiceIndex","target","map","option","index","lang","voiceURI","rate","min","max","defaultValue","step","setRate","pitch","setPitch","API_URL","a","axios","get","todos","data","todo","task","post","newTodo","payload","put","delete","deleted","lastTodo","getAllTodos","getTodo","createTodo","updateTodo","deleteTodo","getMostRecentTodo","TodoForm","useState","setTodos","setNewTodo","useEffect","TodoAPIHelper","fetchTodoAndSetTodos","preventDefault","console","log","some","alert","newTask","stopPropagation","done","find","_id","updatedTodo","filter","i","VirtualAssistant","process","REACT_APP_DEEPL_KEY","showSettings","showTodos","setLat","setLong","message","setMessage","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getLocation","useSound","Bells10","Bells11","LoadingTone","stop","sound","isPlaying","PowerDown7","PowerUp18","SynthChime8","SynthChime9","SynthChime11","onend","speak","text","voice","info","Quirky7","Quirky8","Sprinkle","LowTuTone","Heard","timer","timerStop","timerSound","isTimerPlaying","hilo_sparkle","onEnd","supported","cancel","speaking","useSpeechRecognition","commands","transcript","interimTranscript","finalTranscript","listening","resetTranscript","browserSupportsSpeechRecognition","setIsShowing","toggle","useCommandsModal","handleMouseDown","getElementsByClassName","classList","remove","SpeechRecognition","startListening","continuous","language","handleMouseUp","add","stopListening","settingsProps","marginBottom","margin","marginTop","placeholder","src","micOn","micOff","onMouseDown","onMouseUp","VoiceSynthesizer","setText","rows","backgroundColor","color","padding","Dashboard","Login","history","useHistory","isLoggedIn","setLoggedIn","username","password","loginForm","setLoginForm","localStorage","getItem","handleLogin","fetch","method","headers","JSON","stringify","res","json","token","window","setItem","error","handleLoginChange","clear","onSubmit","cursor","to","Register","state","setState","setRegistered","email","registrationForm","setRegistrationForm","handleRegistration","push","handleRegistrationChange","App","basename","path","exact","component","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ef9210f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mic_on.ccc2e903.png\";","export default __webpack_public_path__ + \"static/media/mic_off.efc866fc.png\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst CommandsModal = ({ isShowing, hide }) =>\n  isShowing\n    ? ReactDOM.createPortal(\n        <React.Fragment>\n          <div className=\"modal-overlay\" />\n          <div\n            className=\"modal-wrapper\"\n            aria-modal\n            aria-hidden\n            tabIndex={-1}\n            role=\"dialog\"\n          >\n            <div className=\"modal\">\n              <div className=\"modal-header\">\n                <button\n                  type=\"button\"\n                  className=\"modal-close-button\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={hide}\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <center>\n                <h1>Commands: </h1>\n                <hr />\n                <br />\n              </center>\n              {/* <ul> */}\n              {/* <center> */}\n              {/* <h2>Verbal response:</h2> */}\n              {/* </center> */}\n              {/* <li>▸ [\"hello\", \"hi\"]</li> */}\n              {/* <li>▸ \"(hello) my name is *\"</li> */}\n              {/* <li>▸ \"help\"</li> */}\n              {/* <li>▸ \"up up down down left right left right b a (start)\"</li> */}\n              {/* </ul> */}\n              <ul>\n                <center>\n                  <h2>Action response:</h2>\n                </center>\n                {/* <li>\n                  ▸ \"reset\" <strong>:|:</strong> reset transcript\n                </li> */}\n                <li>▸ \"clear\" :|: clear transcript(spoken words)</li>\n                <li>\n                  ▸ [\"(get) commands\", \"show commands\"] :|: open commands modal\n                </li>\n                {/* <li>\n                  ▸ [\"log in\", \"login\"] :|: open login page(opens in same\n                  window; **currently does not offer 'go back' functionality -\n                  note to self :|: fix that.)\n                </li> */}\n                {/* <li>\n                  ▸ [\"register\", \"sign up\", \"signup\"] :|: open registration page\n                </li> */}\n                {/* <li>▸ \"demo\" :|: opens demo</li> */}\n                {/* <li>\n                  ▸ \"go to voice synthesizer\" :|: opens voice synthesizer(*note\n                  to self* :|: should be deprecated)\n                </li> */}\n                <li>▸ \"(go) back\" :|: browser back</li>\n                <li>▸ \"(go) forward\" :|: browser forward</li>\n                <li>▸ \"open webpage *\" :|: opens \"http:// * .com\"</li>\n                <li>▸ \"search google for *\" :|: searches google for *</li>\n                <li>\n                  ▸ \"google search exact *\" :|: searches google for exact *\n                </li>\n                <li>\n                  ▸ \"add new task *\" :|: gets new task ready to add to list\n                </li>\n                <li>\n                  ▸ \"(yes) create new task\" :|: adds new task to todo list\n                </li>\n                <li>\n                  ▸ [\"show me my to-do list\", \"show me my to-dos\", \"set to-dos\",\n                  \"add to to-do list\"] :|: opens to-do list\n                </li>\n                <li>\n                  ▸ \"show settings\" :|: shows settings view; changes made here\n                  persist\n                </li>\n                <li>▸ \"hide settings\" :|: hides settings view</li>\n                <li>\n                  ▸ \"whisper *\" :|: whispers \"okay, \" + the words that follow;\n                  ideally, this will instead set whisper mode in the future\n                </li>\n                <center>\n                  <li>\n                    <h4>Weather:</h4>\n                  </li>\n                </center>\n                <li>\n                  ▸ \"fetch weather\" :|: fetches weather data; **note** :|: we're\n                  working on fixing the need for this command, but for now,\n                  weather data must be fetched this way (only once) before\n                  making other weather commands.\n                </li>\n                <li>\n                  ▸ [\"(current) weather\", \"what's the weather\", \"what is the\n                  weather\", \"tell me the weather\"] :|: gives current weather\n                  description\n                </li>\n                <li>▸ \"current temperature\" :|: gives current temperature</li>\n                <li>\n                  ▸ [\"(current) moon phase\", \"what's the moon phase\", \"what\n                  phase is the moon (in)\"] :|: gives (currently incorrect I\n                  believe, I need to work on that function...) the current moon\n                  phase.\n                </li>\n                {/* <li>\n                  ▸ \"current sunrise\" :|: gives today's sunrise time.(or, it\n                  would if I could figure out that UTC/Linux time conversion\n                  thing)\n                </li> */}\n                <center>\n                  <li>\n                    <h4>Time:</h4>\n                  </li>\n                </center>\n                <li>\n                  \"set (a) timer for :timeout seconds\" :|: sets a timer for\n                  :number seconds\n                </li>\n                <li>\n                  ▸ \"set a timer for :timeout minute\" :|: sets a timer for\n                  :number minutes\n                </li>\n                <li>\n                  ▸ \"what time is it\" :|: responds with the time (24hr only for\n                  now)\n                </li>\n                <li>\n                  ▸ [\"what is todays date\", \"what's today's date\", \"what's the\n                  date\" ] :|: responds with the date (YYYY-MM-DD)\n                </li>\n                <li>▸ \"what day is it\" :|: responds with the weekday</li>\n              </ul>\n            </div>\n          </div>\n        </React.Fragment>,\n        document.body\n      )\n    : null;\n// }\n\nexport default CommandsModal;\n","import { useSpeechSynthesis } from \"react-speech-kit\";\n\nexport default function Settings(props) {\n  //\n  //   const handleClick = (e) =>{\n  //       props.onClick();\n  //     // () => props.speak({ text, voice, rate, pitch });\n  //   }\n  const { voices } = useSpeechSynthesis();\n  return (\n    <div className=\"synth instructions glass-panel\" style={{ height: \"372px\" }}>\n      <h1 className=\"synth-h1\">Voice Synthesizer</h1>\n\n      <form className=\"synth-form\">\n        <div className=\"synth-input\">\n          {/* ////////////////////////////////////////////////////////////////////////// */}\n          {/* <---------------------------- VOICE SELECTOR ----------------------------> */}\n          {/* ////////////////////////////////////////////////////////////////////////// */}\n          <label htmlFor=\"voice\">Voices: </label>\n          <div className=\"select-wrapper\">\n            <select\n              className=\"voice-selector\"\n              style={{ width: \"300px\" }}\n              id=\"voice\"\n              name=\"voice\"\n              value={props.voiceIndex || \"\"}\n              onChange={(e) => {\n                props.setVoiceIndex(e.target.value);\n              }}\n            >\n              <option value=\"\">\n                «----------------- Select a voice -----------------»\n              </option>\n              {voices &&\n                voices.map((option, index) => (\n                  <option key={option.voiceURI} value={index}>\n                    {`${option.lang} - ${option.name}`}\n                  </option>\n                ))}\n            </select>\n          </div>\n        </div>\n        {/* ////////////////////////////////////////////////////////////////////////// */}\n        {/* <------------------------------ RATE RANGE ------------------------------> */}\n        {/* ////////////////////////////////////////////////////////////////////////// */}\n        <div className=\"synth-input\">\n          <label htmlFor=\"rate\">\n            Rate: <span>{props.rate}</span>\n          </label>\n          <input\n            className=\"rate-range range\"\n            style={{ width: \"300px\" }}\n            type=\"range\"\n            min=\"0.5\"\n            max=\"2\"\n            value={props.rate}\n            defaultValue=\"1\"\n            step=\"0.1\"\n            id=\"rate\"\n            onChange={(e) => {\n              props.setRate(e.target.value);\n            }}\n          />\n        </div>\n        {/* /////////////////////////////////////////////////////////////////////////// */}\n        {/* <------------------------------ PITCH RANGE ------------------------------> */}\n        {/* /////////////////////////////////////////////////////////////////////////// */}\n        <div className=\"synth-input\">\n          <label htmlFor=\"pitch\">\n            Pitch: <span>{props.pitch}</span>\n          </label>\n          <input\n            className=\"pitch-range range\"\n            style={{ width: \"300px\" }}\n            type=\"range\"\n            min=\"0\"\n            max=\"2\"\n            value={props.pitch}\n            defaultValue=\"1\"\n            step=\"0.1\"\n            id=\"pitch\"\n            onChange={(e) => {\n              props.setPitch(e.target.value);\n            }}\n          />\n        </div>\n\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n        {/* <----------------------------- MESSAGE EDITOR -----------------------------> */}\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n        {/* <div className=\"synth-input\">\n          <label htmlFor=\"message\">Message: </label>\n          <textarea\n            className=\"message-box\"\n            id=\"message\"\n            name=\"message\"\n            rows={3}\n            value={props.text}\n            onChange={(e) => {\n              props.setText(e.target.value);\n            }}\n            style={{\n              height: \"75px\",\n              width: \"300px\",\n              backgroundColor: \"transparent\",\n              color: \"white\",\n              padding: \"10px\",\n            }}\n          />\n        </div> */}\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n        {/* <------------------------------- SUBMIT BTN -------------------------------> */}\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n        {/* <div className=\"speak-toggle-btn btn\">\n          {props.speaking ? (\n            <button type=\"button\" onClick={props.cancel}>\n              Stop\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              onClick={handleClick}\n            >\n              Speak\n            </button>\n          )}\n        </div>\n      */}\n      </form>\n\n      <p>When you're finished here, just say \"Hide settings\"</p>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nconst API_URL = \"https://virtual-assist-backend.herokuapp.com/todos\";\n\n//GET all\nasync function getAllTodos() {\n  const { data: todos } = await axios.get(API_URL);\n  return todos;\n}\n// GET one\nasync function getTodo(id) {\n  const { data: todo } = await axios.get(`${API_URL}/${id}`);\n  return todo;\n}\n// CREATE\nasync function createTodo(task) {\n  const { data: newTodo } = await axios.post(`${API_URL}/new`, {\n    task,\n  });\n  return newTodo;\n}\n// UPDATE\nasync function updateTodo(id, payload) {\n  const { data: newTodo } = await axios.put(`${API_URL}/${id}`, payload);\n  return newTodo;\n}\n// DELETE\nasync function deleteTodo(id) {\n  const deleted = await axios.delete(`${API_URL}/${id}`);\n  // console.log(\"deleted todo id: \", id);\n  return deleted;\n}\n\n// DELETE most current\nasync function getMostRecentTodo() {\n  const lastTodo = await axios.get(`${API_URL}/`);\n  return lastTodo;\n}\n\nexport default {\n  getAllTodos,\n  getTodo,\n  createTodo,\n  updateTodo,\n  deleteTodo,\n  getMostRecentTodo,\n};\n//////////////////////////////////////////////////////////////////////////////////\n// getAllTodos:                                                                 //\n//      fetching all the todos from our API via axios.get                       //\n// createTodo(task):                                                            //\n//      accepts a task and sends a post via axios.post to our API_URL and       //\n//      returns the newTodo. Note: axios stores the response of our requests    //\n//      in a field called data                                                  //\n// updateTodo:                                                                  //\n//      accepts an id and a payload object contain fields that we want to       //\n//      update => payload= {completed: true} .It sends a PUT request to update  //\n//      the todo                                                                //\n// deleteTodo(id):                                                              //\n//      accepts an id and sends a delete request to our API.                    //\n// ---------------------------------------------------------------------------- //\n// And we make all these functions accessible in other files using an export    //\n// function export default { createTodo, deleteTodo, updateTodo, getAllTodos }; //\n//////////////////////////////////////////////////////////////////////////////////\n","import { useEffect, useState } from \"react\";\nimport TodoAPIHelper from \"../../helpers/TodoAPIHelper\";\nimport \"./TodoForm.css\";\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n\nexport default function TodoForm() {\n  ///////////////////////////////////\n  // STATE\n  ///////////////////////////////////\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  // const [todo, setTodo] = useState(\"\");\n  // GET ALL\n  useEffect(() => {\n    const fetchTodoAndSetTodos = async () => {\n      const todos = await TodoAPIHelper.getAllTodos();\n      setTodos(todos);\n    };\n    fetchTodoAndSetTodos();\n  }, []);\n  // // GET one\n  // const fetchTodo = async () => {\n  //   const todo = await TodoAPIHelper.getTodo();\n  //   setTodo();\n  // };\n  // CREATE\n  const createTodo = async (e) => {\n    e.preventDefault();\n    // check if todo is empty:\n    if (!newTodo) {\n      console.log(\"no todo entered.\");\n      return;\n    }\n    // check if todo already exists:\n    if (todos.some(({ task }) => task === newTodo)) {\n      alert(`Task: ${newTodo} already exists`);\n      return;\n    }\n    // create todo:\n    const newTask = await TodoAPIHelper.createTodo(newTodo);\n    // add todo to the list:\n    setTodos([...todos, newTask]);\n  };\n  // UPDATE\n  const updateTodo = async (e, id) => {\n    e.stopPropagation();\n    const payload = {\n      done: !todos.find((todo) => todo._id === id).done,\n    };\n    const updatedTodo = await TodoAPIHelper.updateTodo(id, payload);\n    setTodos(todos.map((todo) => (todo._id === id ? updatedTodo : todo)));\n  };\n  // DELETE\n  const deleteTodo = async (e, id) => {\n    try {\n      e.stopPropagation();\n      await TodoAPIHelper.deleteTodo(id);\n      setTodos(todos.filter(({ _id: i }) => id !== i));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // const {\n  //   transcript,\n  //   interimTranscript,\n  //   finalTranscript,\n  //   resetTranscript,\n  //   listening,\n  // } = useSpeechRecognition({ commands });\n\n  return (\n    <div className=\"TodoForm\">\n      <h1 className=\"todo-list-title\">Todo List</h1>\n\n      <div className=\"todo-input-container\">\n        <div className=\"todo-input-wrapper\">\n          <input\n            id=\"todo-input\"\n            type=\"text\"\n            value={newTodo}\n            onChange={({ target }) => setNewTodo(target.value)}\n          />\n          <button className=\"todo-add-btn\" type=\"button\" onClick={createTodo}>\n            Add\n          </button>\n        </div>\n\n        <hr></hr>\n\n        <div className=\"todo-list-wrapper\">\n          <ul className=\"todo-list\">\n            {todos.map(({ _id, task, done }, i) => (\n              <div className=\"list-item-wrapper\" key={i}>\n                <div>❏</div>{\" \"}\n                <li\n                  onClick={(e) => updateTodo(e, _id)}\n                  // className={done ? \"done\" : \"\"}\n                  className=\"list-item\"\n                >\n                  {task}{\" \"}\n                </li>\n                <div\n                  className=\"todo-delete\"\n                  onClick={(e) => deleteTodo(e, _id)}\n                >\n                  <span>&times;</span>\n                </div>\n              </div>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n/////////////////////////\n/*\nWe start by creating two states: todo and todos. States are like information about your components. todo will store the user input when creating a new todo and todos will store all of our todos.\n*/\n","export default __webpack_public_path__ + \"static/media/hilo_sparkle.c06427a5.mp3\";","export default __webpack_public_path__ + \"static/media/Bells10.50986450.mp3\";","export default __webpack_public_path__ + \"static/media/Bells11.ef0c518e.mp3\";","export default __webpack_public_path__ + \"static/media/Mech-Drone-12.c37e5b13.mp3\";","export default __webpack_public_path__ + \"static/media/PowerDown7.a72d43f4.mp3\";","export default __webpack_public_path__ + \"static/media/PowerUp18.88d3c8f9.mp3\";","export default __webpack_public_path__ + \"static/media/SynthChime8.3e1c743f.mp3\";","export default __webpack_public_path__ + \"static/media/SynthChime9.1b200687.mp3\";","export default __webpack_public_path__ + \"static/media/SynthChime11.52009352.mp3\";","export default __webpack_public_path__ + \"static/media/UI_Quirky7.d17882b8.mp3\";","export default __webpack_public_path__ + \"static/media/UI_Quirky8.190f6fab.mp3\";","export default __webpack_public_path__ + \"static/media/sprinkle.6608214d.mp3\";","export default __webpack_public_path__ + \"static/media/lowTuTone.fa6e4839.mp3\";","export default __webpack_public_path__ + \"static/media/heard.3997879d.mp3\";","export default __webpack_public_path__ + \"static/media/timer.3583f40d.mp3\";","import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nimport micOn from \"../../assets/images/icons/mic_on.png\";\nimport micOff from \"../../assets/images/icons/mic_off.png\";\nimport useSound from \"use-sound\";\nimport CommandsModal from \"../../components/CommandsModal\";\nimport useCommandsModal from \"../../hooks/useCommandsModal\";\nimport Settings from \"../../components/Settings\";\nimport TodoAPIHelper from \"../../helpers/TodoAPIHelper\";\nimport TodoList from \"../Todos/TodoForm\";\nimport hilo_sparkle from \"../../assets/sounds/testing/hilo_sparkle.mp3\";\nimport Bells10 from \"../../assets/sounds/testing/Bells10.mp3\";\nimport Bells11 from \"../../assets/sounds/testing/Bells11.mp3\";\nimport LoadingTone from \"../../assets/sounds/testing/Mech-Drone-12.mp3\";\nimport PowerDown7 from \"../../assets/sounds/testing/PowerDown7.mp3\";\nimport PowerUp18 from \"../../assets/sounds/testing/PowerUp18.mp3\";\nimport SynthChime8 from \"../../assets/sounds/testing/SynthChime8.mp3\";\nimport SynthChime9 from \"../../assets/sounds/testing/SynthChime9.mp3\";\nimport SynthChime11 from \"../../assets/sounds/testing/SynthChime11.mp3\";\nimport Quirky7 from \"../../assets/sounds/testing/UI_Quirky7.mp3\";\nimport Quirky8 from \"../../assets/sounds/testing/UI_Quirky8.mp3\";\nimport Sprinkle from \"../../assets/sounds/testing/sprinkle.mp3\";\nimport LowTuTone from \"../../assets/sounds/testing/lowTuTone.mp3\";\nimport Heard from \"../../assets/sounds/testing/heard.mp3\";\nimport timer from \"../../assets/sounds/testing/timer.mp3\";\nimport \"./VirtualAssistant.css\";\n\n/* DEEPL ENDPOINT EX\n// https://api-free.deepl.com/v2/translate?auth_key=26b78442-234b-ac27-1823-37eb1d698edc%3Afx&text=&target_lang=de\n*/\n\nexport default function VirtualAssistant() {\n  /////////////////////////////////////////////////////////////////\n  // <------------------------- STATE -------------------------> //\n  /////////////////////////////////////////////////////////////////\n  // err msg:\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  // deepl secret key:\n  const deeplApiKey = process.env.REACT_APP_DEEPL_KEY;\n  // Translation POST data:\n  const [langCode, setLangCode] = useState(\"\");\n  const [translations, setTranslations] = useState(null);\n  // Translation GET data:\n  const [langs, setLangs] = useState([]);\n  // Settings:\n  const [showSettings, setShowSettings] = useState(false);\n  // Todos:\n  const [showTodos, setShowTodos] = useState(false);\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  // Geolocation(weather):\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  // Weather:\n  const [weatherData, setWeatherData] = useState(null);\n  // Voice:\n  const [pitch, setPitch] = useState(1);\n  const [rate, setRate] = useState(1);\n  const [voiceIndex, setVoiceIndex] = useState(2);\n  const [message, setMessage] = useState(\"\");\n\n  /////////////////////////////////////////////////////////////////\n  // <------------------------- TODOS -------------------------> //\n  /////////////////////////////////////////////////////////////////\n  // // GET ALL\n  // useEffect(() => {\n  //   const fetchTodoAndSetTodos = async () => {\n  //     const todos = await TodoAPIHelper.getAllTodos();\n  //     setTodos(todos);\n  //   };\n  //   fetchTodoAndSetTodos();\n  // }, []);\n  // GET most recently aded task\n  const getMostRecentTodo = async () => {\n    const lastTodo = await TodoAPIHelper.getMostRecentTodo();\n    return lastTodo.data[0];\n  };\n  // GET oldest task\n  const getOldestTodo = async () => {\n    const firstTodo = await TodoAPIHelper.getMostRecentTodo();\n    return firstTodo.data[firstTodo.data.length - 1];\n  };\n  // DELETE most recent task\n  const deleteMostRecentTodo = async () => {\n    const lastTodo = await TodoAPIHelper.getMostRecentTodo();\n    const lastTodoId = lastTodo.data[0]._id;\n    if (lastTodoId) {\n      TodoAPIHelper.deleteTodo(lastTodoId);\n    }\n  };\n  // DELETE oldest task\n  const deleteOldestTodo = async () => {\n    const lastTodo = await TodoAPIHelper.getMostRecentTodo();\n    const firstTodoId = lastTodo.data[lastTodo.data.length - 1]._id;\n    if (firstTodoId) {\n      TodoAPIHelper.deleteTodo(firstTodoId);\n    }\n  };\n  // CREATE\n  const createTodo = async (e) => {\n    if (todos.some(({ task }) => task === newTodo)) {\n      alert(`Task: ${newTodo} already exists`);\n      return;\n    }\n    // create todo:\n    const newTask = await TodoAPIHelper.createTodo(newTodo);\n    // add todo to the list:\n    setTodos([...todos, newTask]);\n  };\n  // UPDATE\n  const updateTodo = async (e, id) => {\n    e.stopPropagation();\n    const payload = {\n      done: !todos.find((todo) => todo._id === id).done,\n    };\n    const updatedTodo = await TodoAPIHelper.updateTodo(id, payload);\n    setTodos(todos.map((todo) => (todo._id === id ? updatedTodo : todo)));\n  };\n  // DELETE\n  const deleteTodo = async (e, id) => {\n    try {\n      e.stopPropagation();\n      await TodoAPIHelper.deleteTodo(id);\n      setTodos(todos.filter(({ _id: i }) => id !== i));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  /////////////////////////////////////////////////////////////////\n  // <------------------------- TIME -------------------------> //\n  /////////////////////////////////////////////////////////////////\n  // Seconds timer:\n  const setSecondsTimer = (timeout) => {\n    const countdown = parseInt(timeout) * 1000;\n    setTimeout(function (countdown) {\n      let counter = 0;\n      while (countdown > 0) {\n        countdown--;\n      }\n      handlePlayTimer();\n      setMessage(\"beep.\");\n      // speak({ text: \"beep.\", voice: voices[voiceIndex], rate, pitch });\n    }, countdown);\n  };\n  // Minutes timer:\n  const setMinutesTimer = (timeout) => {\n    const countdown = parseInt(timeout) * 60000;\n    setTimeout(function (countdown) {\n      while (countdown > 0) {\n        countdown--;\n      }\n      setMessage(\"beep.\");\n      speak({ text: \"beep.\", voice: voices[voiceIndex], rate, pitch });\n      return;\n    }, countdown);\n  };\n  // current time:\n  const fetchTime = () => {\n    const today = new Date();\n    const time =\n      today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    setMessage(time);\n    speak({ text: `${time}`, voice: voices[voiceIndex], rate, pitch });\n  };\n  // current date:\n  const fetchDate = () => {\n    const today = new Date();\n    const date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n    setMessage(date);\n    speak({\n      text: `the date is ${date}`,\n      voice: voices[voiceIndex],\n      rate,\n      pitch,\n    });\n  };\n  // current day:\n  const fetchDay = () => {\n    // Get the day of week, from 0 (Sunday) to 6 (Saturday).\n    const today = new Date();\n    const day = today.getDay();\n    if (day === 0) {\n      setMessage(\"Today is Sunday.\");\n      speak({ text: \"sunday\", voice: voices[voiceIndex], rate, pitch });\n    } else if (day === 1) {\n      setMessage(\"Today is Monday.\");\n      speak({ text: \"monday\", voice: voices[voiceIndex], rate, pitch });\n    } else if (day === 2) {\n      setMessage(\"Today is Tuesday.\");\n      speak({ text: \"tuesday\", voice: voices[voiceIndex], rate, pitch });\n    } else if (day === 3) {\n      setMessage(\"Today is Wednesday.\");\n      speak({ text: \"wednesday\", voice: voices[voiceIndex], rate, pitch });\n    } else if (day === 4) {\n      setMessage(\"Today is Thursday.\");\n      speak({ text: \"thursday\", voice: voices[voiceIndex], rate, pitch });\n    } else if (day === 5) {\n      setMessage(\"Today is Friday.\");\n      speak({ text: \"friday\", voice: voices[voiceIndex], rate, pitch });\n    } else if (day === 6) {\n      setMessage(\"Today is Saturday.\");\n      speak({ text: \"saturday\", voice: voices[voiceIndex], rate, pitch });\n    }\n  };\n  /////////////////////////////////////////////////////////////////\n  // <------------------------ Weather ------------------------> //\n  /////////////////////////////////////////////////////////////////\n  // Geolocation:\n  useEffect(() => {\n    const getLocation = async () => {\n      await navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n    };\n    getLocation();\n  }, []);\n  // fetch weather:\n  const fetchWeather = async () => {\n    const res = await fetch(\n      `${process.env.REACT_APP_WEATHER_API_URL}/onecall?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=imperial`\n    );\n    const weather = await res.json();\n    setWeatherData(weather);\n    // console.log(weatherData);\n    return weather;\n  };\n  // get current weather description:\n  const getCurrentWeatherDescription = async () => {\n    if (weatherData) {\n      const weatherText = `${weatherData.current.weather[0].description}`;\n      speak({ text: weatherText, voice: voices[voiceIndex] });\n      setMessage(weatherText);\n    } else {\n      const weather = await fetchWeather();\n      if (weather) {\n        const weatherText = `${weather.current.weather[0].description}`;\n        speak({ text: weatherText, voice: voices[voiceIndex] });\n      }\n    }\n  };\n  // get current temp:\n  const getCurrentTemperature = async () => {\n    if (weatherData) {\n      const weatherText = `${weatherData.current.temp.toString()} degrees`;\n      speak({ text: weatherText, voice: voices[voiceIndex] });\n      setMessage(weatherText);\n    } else {\n      const weather = await fetchWeather();\n      if (weather) {\n        const weatherText = `${weather.current.temp.toString()} degrees`;\n        speak({ text: weatherText, voice: voices[voiceIndex] });\n      }\n    }\n  };\n  // get current clouds:\n  const getCurrentClouds = async () => {\n    if (weatherData) {\n      const weatherText = `${weatherData.current.clouds.toString()} %`;\n      speak({ text: weatherText });\n      setMessage(weatherText);\n    } else {\n      const weather = await fetchWeather();\n      if (weather) {\n        const weatherText = `${weather.current.clouds.toString()} %`;\n        speak({ text: weatherText, voice: voices[voiceIndex] });\n      }\n    }\n  };\n  // get current humidity:\n  const getCurrentHumidity = async () => {\n    if (weatherData) {\n      const weatherText = `${weatherData.current.humidity.toString()} %`;\n      speak({ text: weatherText, voice: voices[voiceIndex] });\n      setMessage(weatherText);\n    } else {\n      const weather = await fetchWeather();\n      if (weather) {\n        const weatherText = `${weather.current.humidity.toString()} %`;\n        speak({ text: weatherText, voice: voices[voiceIndex] });\n      }\n    }\n  };\n  // get current moon phase\n  const getMoonPhase = async () => {\n    if (weatherData) {\n      const phase = weatherData.daily[0].moon_phase;\n      let currentPhase = \"new moon\";\n      if (phase === 0.25) {\n        currentPhase = \"first quarter\";\n      } else if (phase === 0.5) {\n        currentPhase = \"full moon - that explains my mood.\";\n      } else if (phase === 0.75) {\n        currentPhase = \"last quarter\";\n      } else if (phase === 1 || phase === 0) {\n        currentPhase = \"new moon\";\n      } else if (phase > 0.75 && phase < 1) {\n        currentPhase = \"waning crescent\";\n      } else if (phase > 0.5 && phase < 0.75) {\n        currentPhase = \"waning gibous\";\n      } else if (phase > 0.25 && phase < 0.5) {\n        currentPhase = \"waxing gibous\";\n      } else if (phase > 0 && phase < 0.25) {\n        currentPhase = \"waxing crescent\";\n      }\n      const weatherText = `${currentPhase}`;\n      // speak({ text: weatherText, voice: voices[voiceIndex], });\n      speak({ text: weatherText, voice: voices[voiceIndex], rate, pitch });\n      setMessage(weatherText);\n      // console.log(\"phase: \", weatherData.daily[0].moon_phase.toString());\n    } else {\n      speak({ text: \"cannot fetch data\", voice: voices[voiceIndex] });\n    }\n  };\n  // get sunrise time:\n  const getSunrise = async () => {\n    if (weatherData) {\n      const utc = `${weatherData.daily[0].sunrise}`;\n      const date = new Date(utc * 1000);\n      const timeString = date.toLocaleTimeString();\n      const weatherText = timeString.split(\":\").join();\n      speak({ text: weatherText, voice: voices[voiceIndex] });\n      setMessage(timeString);\n    } else {\n      const weather = await fetchWeather();\n      if (weather) {\n        const weatherText = `${weather.daily[0].sunrise}`;\n        speak({ text: weatherText, voice: voices[voiceIndex] });\n      }\n    }\n  };\n  // get sunset time:\n  const getSunset = async () => {\n    if (weatherData) {\n      const utc = `${weatherData.daily[0].sunset}`;\n      const date = new Date(utc * 1000);\n      const timeString = date.toLocaleTimeString();\n      const weatherText = timeString.split(\":\").join();\n      speak({ text: weatherText, voice: voices[voiceIndex] });\n      setMessage(timeString);\n    } else {\n      const weather = await fetchWeather();\n      if (weather) {\n        const weatherText = `${weather.daily[0].sunset}`;\n        speak({ text: weatherText, voice: voices[voiceIndex] });\n      }\n    }\n  };\n  // get moonrise time:\n  const getMoonrise = async () => {\n    if (weatherData) {\n      const utc = `${weatherData.daily[0].moonrise}`;\n      const date = new Date(utc * 1000);\n      const timeString = date.toLocaleTimeString();\n      const weatherText = timeString.split(\":\").join();\n      speak({ text: weatherText, voice: voices[voiceIndex] });\n      setMessage(timeString);\n    } else {\n      const weather = await fetchWeather();\n      if (weather) {\n        const weatherText = `${weather.daily[0].moonrise}`;\n        speak({ text: weatherText, voice: voices[voiceIndex] });\n      }\n    }\n  };\n  // get moonset time:\n  const getMoonset = async () => {\n    if (weatherData) {\n      const utc = `${weatherData.daily[0].moonset}`;\n      const date = new Date(utc * 1000);\n      const timeString = date.toLocaleTimeString();\n      const weatherText = timeString.split(\":\").join();\n      speak({ text: weatherText, voice: voices[voiceIndex] });\n      setMessage(timeString);\n    } else {\n      const weather = await fetchWeather();\n      if (weather) {\n        const weatherText = `${weather.daily[0].moonset}`;\n        speak({ text: weatherText, voice: voices[voiceIndex] });\n      }\n    }\n  };\n  // get forecast:\n  const getForecast = async () => {\n    if (weatherData) {\n      const monday = `${weatherData.daily[0].weather[0].description}`;\n      const tuesday = `${weatherData.daily[1].weather[0].description}`;\n      const wednesday = `${weatherData.daily[2].weather[0].description}`;\n      const thursday = `${weatherData.daily[3].weather[0].description}`;\n      const friday = `${weatherData.daily[4].weather[0].description}`;\n      const saturday = `${weatherData.daily[5].weather[0].description}`;\n      const sunday = `${weatherData.daily[6].weather[0].description}`;\n\n      speak({\n        text: `Monday: ${monday}, Tuesday: ${tuesday}, Wednesday: ${wednesday}, Thursday: ${thursday}, Friday: ${friday}, Saturday: ${saturday}, and Sunday: ${sunday}`,\n        voice: voices[voiceIndex],\n      });\n      setMessage(\n        `Monday: ${monday}, Tuesday: ${tuesday}, Wednesday: ${wednesday}, Thursday: ${thursday}, Friday: ${friday}, Saturday: ${saturday}, and Sunday: ${sunday}`\n      );\n    }\n  };\n  // get short forecast:\n  const getShortForecast = async () => {\n    if (weatherData) {\n      const monday = `${weatherData.daily[0].weather[0].main}`;\n      const tuesday = `${weatherData.daily[1].weather[0].main}`;\n      const wednesday = `${weatherData.daily[2].weather[0].main}`;\n      const thursday = `${weatherData.daily[3].weather[0].main}`;\n      const friday = `${weatherData.daily[4].weather[0].main}`;\n      const saturday = `${weatherData.daily[5].weather[0].main}`;\n      const sunday = `${weatherData.daily[6].weather[0].main}`;\n\n      speak({\n        text: `Monday: ${monday}, Tuesday: ${tuesday}, Wednesday: ${wednesday}, Thursday: ${thursday}, Friday: ${friday}, Saturday: ${saturday}, and Sunday: ${sunday}`,\n        voice: voices[voiceIndex],\n      });\n      setMessage(\n        `Monday: ${monday}, Tuesday: ${tuesday}, Wednesday: ${wednesday}, Thursday: ${thursday}, Friday: ${friday}, Saturday: ${saturday}, and Sunday: ${sunday}`\n      );\n    }\n  };\n  // get the high temp:\n  const getHigh = async () => {\n    if (weatherData) {\n      const weatherText = `${weatherData.daily[0].temp.max}`;\n\n      speak({\n        text: `${weatherText} degrees`,\n        voice: voices[voiceIndex],\n      });\n      setMessage(`${weatherText} degrees`);\n    }\n  };\n  // get the chance of rain:\n  const getRainChance = async () => {\n    if (weatherData) {\n      const weatherText = `${weatherData.daily[0].pop}`;\n\n      speak({\n        text: `${weatherText} %`,\n        voice: voices[voiceIndex],\n      });\n      setMessage(`${weatherText} %`);\n    }\n  };\n  //////////////////////////////////////////////////////////////\n  // <------------------------ Math ------------------------> //\n  //////////////////////////////////////////////////////////////\n  // Addition(2 nums):\n  const add = (a, b) => {\n    const c = parseInt(a) + parseInt(b);\n    const ans = c.toString();\n    setMessage(`${ans}`);\n    speak({ text: `${ans}`, voice: voices[voiceIndex] });\n    return ans;\n  };\n  // Subtraction(2 nums):\n  const subtract = (a, b) => {\n    const c = parseInt(a) - parseInt(b);\n    const ans = c.toString();\n    setMessage(`${ans}`);\n    speak({ text: `${ans}`, voice: voices[voiceIndex] });\n    return ans;\n  };\n  // Multiply(2 nums):\n  const multiply = (a, b) => {\n    const c = parseInt(a) * parseInt(b);\n    const ans = c.toString();\n    setMessage(`${ans}`);\n    speak({ text: `${ans}`, voice: voices[voiceIndex] });\n    return ans;\n  };\n  // Divide(2 nums):\n  const divide = (a, b) => {\n    const c = parseInt(a) / parseInt(b);\n    const ans = c.toString();\n    setMessage(`${ans}`);\n    speak({ text: `${ans}`, voice: voices[voiceIndex] });\n    return ans;\n  };\n  // Remainder:\n  const remainder = (a, b) => {\n    const c = parseInt(a) % parseInt(b);\n    const ans = c.toString();\n    setMessage(`${ans}`);\n    speak({ text: `${ans}`, voice: voices[voiceIndex] });\n    return ans;\n  };\n  const setWhisper = () => {\n    setVoiceIndex(81);\n    setMessage(\"ok i'll whisper\");\n    speak({ text: \"ok I'll be quiet.\", voice: voices[81] });\n  };\n  /////////////////////////////////////////////////////////////////\n  // <----------------------- TRANSLATOR ----------------------> //\n  /////////////////////////////////////////////////////////////////\n  // Check API usage:\n  const getUsage = async () => {\n    const data = await fetch(\n      \"https://api-free.deepl.com/v2/usage?auth_key=26b78442-234b-ac27-1823-37eb1d698edc:fx\"\n    ).then((data) => data.json());\n    console.log(\"usage data: \", data);\n    if (data) {\n      const charCount = `Your character count is at ${data.character_count.toString()} and your character limit is at ${data.character_limit.toString()}`;\n      speak({\n        text: charCount,\n        voice: voices[voiceIndex],\n      });\n      setMessage(\n        `Your character count is at ${data.character_count.toString()} and your character limit is at ${data.character_limit.toString()}`\n      );\n    } else {\n      speak({\n        text: \"I'm sorry, I can't fetch that right now.\",\n        voice: voices[voiceIndex],\n      });\n      setMessage(\"I'm sorry, I can't fetch that right now.\");\n    }\n  };\n  // Fetch Languages:\n  const getLanguages = async () => {\n    const data = await fetch(\n      \"https://api-free.deepl.com/v2/languages?auth_key=26b78442-234b-ac27-1823-37eb1d698edc:fx\"\n    ).then((data) => data.json());\n    setLangs([...data]);\n    if (data) {\n      return langs.data;\n    } else {\n      speak({\n        text: \"I'm sorry, I can't fetch that data right now.\",\n        voice: voices[voiceIndex],\n      });\n      setMessage(\"I'm sorry, I can't fetch that data right now.\");\n    }\n  };\n  // // Translate:\n  // const translate = async (text) => {\n  //   const translationText = text.split(\" \").join(\"%20\");\n  //   try {\n  //     const res = await fetch(\n  //       `http://api-free.deepl.com/v2/translate?auth_key=26b78442-234b-ac27-1823-37eb1d698edc:fx&text=${translationText}&target_lang=es&source_lang=en`,\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/x-www-form-urlencoded\",\n  //         },\n  //         body: JSON.stringify(translationText),\n  //       }\n  //     );\n  //     await data\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  //   if (data) {\n  //     setTranslation(data);\n  //     console.log(\"translation obj: \", data.translation[0]);\n  //     console.log(\"translation: arr: \", data.translation);\n  //   }\n  // };\n  /////////////////////////////////////////////////////////////////\n  // <--------------------- AUDIO EARCONS ---------------------> //\n  /////////////////////////////////////////////////////////////////\n  // Bells10:\n  const [playBells10] = useSound(Bells10);\n  const handlePlayBells10 = () => {\n    playBells10();\n  };\n  // Bells11:\n  const [playBells11] = useSound(Bells11);\n  const handlePlayBells11 = () => {\n    playBells11();\n  };\n  // LoadingTone:\n  const [playLoadingTone, { sound, stop, isPlaying }] = useSound(LoadingTone);\n  const handlePlayLoadingTone = () => {\n    playLoadingTone();\n    sound.loop(true);\n  };\n  useEffect(() => stop, []);\n  const handleStopLoadingTone = () => {\n    stop();\n  };\n  // PowerDown7:\n  const [playPowerDown7] = useSound(PowerDown7);\n  const handlePlayPowerDown7 = () => {\n    playPowerDown7();\n  };\n  // PowerUp18:\n  const [playPowerUp18] = useSound(PowerUp18);\n  const handlePlayPowerUp18 = () => {\n    playPowerUp18();\n  };\n  // SynthChime8:\n  const [playSynthChime8] = useSound(SynthChime8);\n  const handlePlaySynthChime8 = () => {\n    playSynthChime8();\n  };\n  // SynthChime9:\n  const [playSynthChime9] = useSound(SynthChime9);\n  const handlePlaySynthChime9 = () => {\n    playSynthChime9();\n  };\n  // SynthChime11:\n  const [playSynthChime11] = useSound(SynthChime11, {\n    onend: () => {\n      speak({\n        text: \"testing speech after audio\",\n        voice: voices[voiceIndex],\n      });\n      console.info(\"Sound has ended\");\n    },\n  });\n  const handlePlaySynthChime11 = () => {\n    playSynthChime11();\n  };\n  // Quirky7:\n  const [playQuirky7] = useSound(Quirky7);\n  const handlePlayQuirky7 = () => {\n    playQuirky7();\n  };\n  // Quirky8:\n  const [playQuirky8] = useSound(Quirky8);\n  const handlePlayQuirky8 = () => {\n    playQuirky8();\n  };\n  // Sprinkle:\n  const [playSprinkle] = useSound(Sprinkle);\n  const handlePlaySprinkle = () => {\n    playSprinkle();\n  };\n  // LowTuTone:\n  const [playLowTuTone] = useSound(LowTuTone);\n  const handlePlayLowTuTone = () => {\n    playLowTuTone();\n  };\n  // Heard:\n  const [playHeard] = useSound(Heard);\n  const handlePlayHeard = () => {\n    playHeard();\n  };\n  // timer:\n  const [playTimer, { timerSound, timerStop, isTimerPlaying }] = useSound(\n    timer,\n    {\n      onend: () => {\n        speak({\n          text: \"timer has ended\",\n          voice: voices[voiceIndex],\n        });\n        console.info(\"Timer has ended\");\n      },\n    }\n  );\n  const handlePlayTimer = () => {\n    // would like to loop a couple times\n    playTimer();\n    timerSound.loop();\n  };\n  useEffect(() => timerStop, []);\n  const handleTimerTone = () => {\n    timerSound.loop();\n    setTimeout(function (timerStop) {\n      timerStop();\n    }, 5000);\n  };\n\n  // Test:\n  const [playSparkle] = useSound(hilo_sparkle);\n  const handlePlayAudio = () => {\n    playSparkle();\n    // console.log(\"playing hilo_sparkle\");\n    // console.log(\"hilo_sparkle: \", hilo_sparkle);\n  };\n  const onEnd = () => {\n    // Do something here after speaking has finished:\n    // setMessage(\"audio testing...\");\n    // console.log(\"speaking : \", window.speechSynthesis.speaking);\n    // console.log(\"msg: \", message);\n  };\n  const handlePlayAudioAndThenSpeak = () => {\n    playSynthChime11();\n    console.log();\n  };\n\n  /////////////////////////////////////////////////////////////////\n  // <----------------------- COMMANDS -----------------------> //\n  /////////////////////////////////////////////////////////////////\n  const commands = [\n    \n  ];\n  /////////////////////////////////////////////////////////////////\n  // <------------------------- HOOKS -------------------------> //\n  /////////////////////////////////////////////////////////////////\n  // speech synth:\n  // <-----------------------------------------------------------\n  // const onEnd = () => {\n  //   // You could do something here after speaking has finished\n  // };\n\n  const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\n    onEnd,\n  });\n\n  // Purpose of code below? <------------------------------------\n  // I think it used to instantiate it? idk it's in the doc examples...\n  const voice = voices[voiceIndex] || null;\n\n  // // speech recog:\n  // const {\n  //   transcript,\n  //   interimTranscript,\n  //   finalTranscript,\n  //   resetTranscript,\n  //   listening,\n  // } = useSpeechRecognition({ commands });\n\n  const {\n    transcript,\n    interimTranscript,\n    finalTranscript,\n    resetTranscript,\n    listening,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition({\n    // transcribing,\n    // clearTranscriptOnListen,\n    commands,\n  });\n\n  \n  useEffect(() => {\n    if (interimTranscript !== '') {\n      console.log('Got interim result:', interimTranscript)\n    }\n    if (finalTranscript !== '') {\n      console.log('Got final result:', finalTranscript)\n      // alert(finalTranscript)\n      setMessage(`This is my mock-answer to \"${finalTranscript}\"`);\n      speak({\n        text: `This is my mock-answer to \"${finalTranscript}\"`,\n        voice: voices[voiceIndex],\n      });\n    }\n  }, [interimTranscript, finalTranscript]);\n  \n\n  // toggle show commands modal:\n  const { isShowing, toggle } = useCommandsModal();\n\n  /////////////////////////////////////////////////////////////////\n  // <-------------------- EVENT HANDLERS ---------------------> //\n  /////////////////////////////////////////////////////////////////\n  // start animation/start listening:\n  const handleMouseDown = async (e) => {\n    e.preventDefault();\n\n    const VirtualAss = document.getElementsByClassName(\"virtual-assistant\");\n    VirtualAss[0].classList.remove(\"paused\");\n\n    await SpeechRecognition.startListening({\n      continuous: false,\n      language: \"en-US\",\n    });\n  };\n  // pause VA animation/stop listening:\n  const handleMouseUp = async (e) => {\n    e.preventDefault();\n\n    const VirtualAss = document.getElementsByClassName(\"virtual-assistant\");\n    VirtualAss[0].classList.add(\"paused\");\n\n    // IN CASE OF EMERGENCY! <<<--------------------------!!\n    // (Like when you try to make her read an entire monologue from Queen of the Damned for lulz and she get stuck unable to talk and you're afraid you broke it forever)\n    // anyway, this is how you cancel the speech:\n    // window.speechSynthesis.cancel();\n    /*\n    Tests:    \n    console.log(\"speaking : \", window.speechSynthesis.speaking);\n    console.log(\"listening : \", window.speechRecognition.listening);\n    console.log(\"transcript : \", window.speechRecognition.transcript);\n    console.log(\"interimTranscript : \", window.speechRecognition.interimTranscript);\n    console.log(\"finalTranscript : \", window.speechRecognition.finalTranscript);\n    console.log(\"commands : \", window.speechRecognition.commands);\n    */\n\n    await SpeechRecognition.stopListening();\n\n  };\n  // PROPS:\n  const settingsProps = {\n    voiceIndex,\n    setVoiceIndex,\n    rate,\n    setRate,\n    pitch,\n    setPitch,\n    // voices, <------ p sure I define this in settings anyway?\n  };\n\n  if (!browserSupportsSpeechRecognition) {\n    console.log(\"Browser support? \", browserSupportsSpeechRecognition);\n    return (\n      <span>\n        No browser support for Speech Recognition. Sorry, I'm trying to figure\n        out polyfills{\" \"}\n      </span>\n    );\n  }\n  if (!supported) {\n    return (\n      <span>\n        No browser support for Speech Synthesis. Sorry, I'm trying to figure out\n        polyfills{\" \"}\n      </span>\n    );\n  } else {\n    return (\n      <div className=\"page\" id=\"VirtualAssistant\">\n        {/* {!supported && (\n          <p>\n            Oh no, it looks like your browser doesn't support Speech Synthesis.\n          </p>\n        )} */}\n        {/* ///////////////////////////////////////////////////////////////// */}\n        {/* <------------------------ COMMANDS MODAL -----------------------> */}\n        {/* ///////////////////////////////////////////////////////////////// */}\n        <CommandsModal isShowing={isShowing} hide={toggle} />\n        <div className=\"center-col virtual-assistant-container\">\n          <div className=\"paused virtual-assistant\"></div>\n        </div>\n        <div className=\"center-col main\">\n          {showSettings && <Settings {...settingsProps} />}\n          {showTodos && <TodoList />}\n          {!showSettings && !showTodos && (\n            <div>\n              <div>\n                <div className=\"instructions-container\">\n                  {/* ///////////////////////////////////////////////////////////////// */}\n                  {/* <----------------- INSTRUCTIONS/MESSAGE DISPLAY ----------------> */}\n                  {/* ///////////////////////////////////////////////////////////////// */}\n\n                  <div\n                    className=\" glass-panel\"\n                    id=\"instructions\"\n                    style={{\n                      height: \"150px\",\n                      width: \"550px\",\n                      marginBottom: \"1px\",\n                      value: { message },\n                    }}\n                  >\n                    {message || \"Hello, I'm a virtual assistant.\"}\n\n\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"transcript-display\">\n                {/* ///////////////////////////////////////////////////////////////// */}\n                {/* <-------------------------- TRANSCRIPT -------------------------> */}\n                {/* ///////////////////////////////////////////////////////////////// */}\n                <textarea\n                  style={{\n                    margin: \"0px\",\n                    marginTop: \"0px\",\n                    height: \"150px\",\n                    width: \"550px\",\n                  }}\n                  className=\"glass-panel\"\n                  id=\"transcript\"\n                  value={transcript}\n                  placeholder=\"Hold the button and ask your question\"\n                />{\" \"}\n              </div>\n            </div>\n          )}\n          <div className=\"form-container\">\n            <div\n              className=\"center-col buttons\"\n              style={{ position: \"relative\", margin: \"10px\" }}\n            >\n              <div>\n                {/* ///////////////////////////////////////////////////////////////// */}\n                {/* <------------------------ HOT MIC \"BTN\" ------------------------> */}\n                {/* ///////////////////////////////////////////////////////////////// */}\n                <img className=\"hot-mic-btn\" src={listening ? micOn : micOff} />\n              </div>\n              {/* ///////////////////////////////////////////////////////////////// */}\n              {/* <------------------------- LISTEN BTN --------------------------> */}\n              {/* ///////////////////////////////////////////////////////////////// */}\n              <button\n                onMouseDown={handleMouseDown}\n                onMouseUp={handleMouseUp}\n                className=\"mic-btn\"\n              >\n                🎤\n              </button>\n            </div>\n          </div>\n        </div>\n        )\n      </div>\n    );\n  }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// <-------------------------------- CREATE FALLBACK BEHAVIOR --------------------------------> //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n/*\n  if (SpeechRecognition.browserSupportsSpeechRecognition()) {\n    // continue\n  } else {\n    // Fallback behavior\n  }\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    console.log(\n      \"I'm sorry - This browser does not support speech recognition software.\"\n    );\n  }\n\n    if (browserSupportsContinuousListening) {\n    SpeechRecognition.startListening({ continuous: true });\n  } else {\n    // Fallback behaviour\n  }\n*/\n","import { useState } from \"react\";\n\nexport default function useCommandsModal() {\n  const [isShowing, setIsShowing] = useState(false);\n\n  const toggle = () => {\n    setIsShowing(!isShowing);\n  };\n\n  return {\n    isShowing,\n    toggle,\n  };\n}\n","import { useState } from \"react\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nimport \"../VoiceSynthesizer/VoiceSynthesizer.css\";\n\nexport default function VoiceSynthesizer() {\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  // <------------------------------------------ STATE ------------------------------------------> //\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  const [text, setText] = useState(\n    // \"I am the ghost inside of the machine. Type anything here you'd like for me to say.\"\n    // \"Hi, my name is Iris.\"\n    \"Hola, si.\"\n  );\n  const [pitch, setPitch] = useState(1);\n  const [rate, setRate] = useState(1);\n  const [voiceIndex, setVoiceIndex] = useState(null);\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  // <---------------------------------------- VARIABLES ----------------------------------------> //\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  const onEnd = () => {\n    // You could do something here after speaking has finished\n  };\n  const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\n    onEnd,\n  });\n  const voice = voices[voiceIndex] || null;\n\n  return (\n    <div className=\"synth instructions glass-panel\" style={{ height: \"372px\" }}>\n      <h1 className=\"synth-h1\">Voice Synthesizer</h1>\n\n      <form className=\"synth-form\">\n        <div className=\"synth-input\">\n          {/* ////////////////////////////////////////////////////////////////////////// */}\n          {/* <---------------------------- VOICE SELECTOR ----------------------------> */}\n          {/* ////////////////////////////////////////////////////////////////////////// */}\n          <label htmlFor=\"voice\">Voices: </label>\n          <div className=\"select-wrapper\">\n            <select\n              className=\"voice-selector\"\n              style={{ width: \"300px\" }}\n              id=\"voice\"\n              name=\"voice\"\n              value={voiceIndex || \"\"}\n              onChange={(e) => {\n                setVoiceIndex(e.target.value);\n                console.log(e.target.value);\n              }}\n            >\n              <option value=\"\">\n                «----------------- Select a voice -----------------»\n              </option>\n              {voices.map((option, index) => (\n                <option key={option.voiceURI} value={index}>\n                  {`${option.lang} - ${option.name}`}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        {/* ////////////////////////////////////////////////////////////////////////// */}\n        {/* <------------------------------ RATE RANGE ------------------------------> */}\n        {/* ////////////////////////////////////////////////////////////////////////// */}\n        <div className=\"synth-input\">\n          <label htmlFor=\"rate\">\n            Rate: <span>{rate}</span>\n          </label>\n          <input\n            className=\"rate-range range\"\n            style={{ width: \"300px\" }}\n            type=\"range\"\n            min=\"0.5\"\n            max=\"2\"\n            defaultValue=\"1\"\n            step=\"0.1\"\n            id=\"rate\"\n            onChange={(e) => {\n              setRate(e.target.value);\n            }}\n          />\n        </div>\n        {/* /////////////////////////////////////////////////////////////////////////// */}\n        {/* <------------------------------ PITCH RANGE ------------------------------> */}\n        {/* /////////////////////////////////////////////////////////////////////////// */}\n        <div className=\"synth-input\">\n          <label htmlFor=\"pitch\">\n            Pitch: <span>{pitch}</span>\n          </label>\n          <input\n            className=\"pitch-range range\"\n            style={{ width: \"300px\" }}\n            type=\"range\"\n            min=\"0\"\n            max=\"2\"\n            defaultValue=\"1\"\n            step=\"0.1\"\n            id=\"pitch\"\n            onChange={(e) => {\n              setPitch(e.target.value);\n            }}\n          />\n        </div>\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n        {/* <----------------------------- MESSAGE EDITOR -----------------------------> */}\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n        <div className=\"synth-input\">\n          {/* <div> */}\n          <label htmlFor=\"message\">Message: </label>\n          <textarea\n            className=\"message-box\"\n            id=\"message\"\n            name=\"message\"\n            rows={3}\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n            style={{\n              height: \"75px\",\n              width: \"300px\",\n              backgroundColor: \"transparent\",\n              color: \"white\",\n              padding: \"10px\",\n            }}\n          />\n        </div>\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n        {/* <------------------------------- SUBMIT BTN -------------------------------> */}\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n        <div className=\"speak-toggle-btn btn\">\n          {speaking ? (\n            <button type=\"button\" onClick={cancel}>\n              Stop\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              onClick={() => speak({ text, voice, rate, pitch })}\n            >\n              Speak\n            </button>\n          )}\n        </div>\n      </form>\n\n      <p>When you're finished here, just say \"Back to demo.\"</p>\n    </div>\n  );\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// <-------------------------------- CREATE FALLBACK BEHAVIOR --------------------------------> //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n/*\n  if (SpeechRecognition.browserSupportsSpeechRecognition()) {\n    // continue\n  } else {\n    // Fallback behavior\n  }\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    console.log(\n      \"I'm sorry - This browser does not support speech recognition software.\"\n    );\n  }\n\n    if (browserSupportsContinuousListening) {\n    SpeechRecognition.startListening({ continuous: true });\n  } else {\n    // Fallback behaviour\n  }\n*/\n","//\n\nexport default function Dashboard(props) {\n  return (\n    <div>\n      <h1>Dashboard</h1>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport \"../Login/Login.css\";\n\nexport default function Login() {\n  const history = useHistory();\n  const redirectHome = () => {\n    history(\"../\");\n  };\n  const redirectToLogin = () => {\n    history(\"https://virtual-assist-backend.herokuapp.com/login\");\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  // <------------------------------------------ STATE ------------------------------------------> //\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [loginForm, setLoginForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  // <------------------------------------------ HOOKS ------------------------------------------> //\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setLoggedIn(true);\n      // console.log(token);\n    }\n  }, []);\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // <------------------------------------- EVENT HANDLERS -------------------------------------> //\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      const res = await fetch(\n        \"https://virtual-assist-backend.herokuapp.com/login\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ ...loginForm }),\n        }\n      );\n      setLoginForm({\n        username: \"\",\n        password: \"\",\n      });\n      const data = await res.json();\n      if (data.token) {\n        window.localStorage.setItem(\"token\", data.token);\n        window.localStorage.setItem(\"username\", data.username);\n        setLoggedIn(true);\n        setLoginForm({\n          username: data.username,\n          password: data.password,\n        });\n        // history.push(\"/\");\n        redirectHome();\n        console.log(data.username, \" is now logged in.\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleLogout = (e) => {\n    // clear prev token\n    window.localStorage.clear();\n    setLoggedIn(false);\n    // history.push(\"/login\");\n    redirectToLogin();\n  };\n\n  const handleLoginChange = (e) => {\n    e.preventDefault();\n    setLoginForm({\n      ...loginForm,\n      [e.target.id]: e.target.value,\n      [e.target.username]: e.target.value,\n      [e.target.password]: e.target.value,\n    });\n  };\n\n  return (\n    <div className=\"page\" id=\"Login\">\n      <div>\n        {isLoggedIn ? (\n          <>\n            <div>\n              <div>\n                <p>You are logged in as {loginForm.username} </p>\n                <button onClick={handleLogout}>Log out?</button>\n                <Dashboard />\n              </div>\n            </div>\n          </>\n        ) : (\n          <>\n            <div className=\"login-form-wrapper\">\n              <h1>Log in</h1>\n              <form className=\"login-form\" onSubmit={handleLogin}>\n                <label htmlFor=\"username\">\n                  Username:{\" \"}\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    value={loginForm.username}\n                    onChange={handleLoginChange}\n                  />\n                </label>\n                <br />\n\n                <label htmlFor=\"password\">\n                  Password:{\" \"}\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    value={loginForm.password}\n                    onChange={handleLoginChange}\n                  />\n                </label>\n                <br />\n\n                <input\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                  value=\"Log in\"\n                />\n              </form>\n              <div style={{ color: \"blue\", cursor: \"pointer\" }}>\n                <Link to=\"/register\">Sign up</Link>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"../Login/Login\";\nimport \"../Register/Register.css\";\n\nexport default function Register() {\n  const history = useHistory();\n  const redirectToLogin = () => {\n    history.push(\"https://virtual-assist-backend.herokuapp.com/login\");\n  };\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  // <------------------------------------------ STATE ------------------------------------------> //\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  const [state, setState] = useState(false);\n  const [registered, setRegistered] = useState(false);\n  const [registrationForm, setRegistrationForm] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  // <------------------------------------------ HOOKS ------------------------------------------> //\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setRegistered(true);\n    }\n  }, []);\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // <------------------------------------- EVENT HANDLERS -------------------------------------> //\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  const handleRegistration = async (e) => {\n    e.preventDefault();\n\n    try {\n      const res = await fetch(\n        \"https://virtual-assist-backend.herokuapp.com/register\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ ...registrationForm }),\n        }\n      );\n      setRegistrationForm({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n      });\n      const data = await res.json();\n      if (data.token) {\n        window.localStorage.setItem(\"token\", data.token);\n        window.localStorage.setItem(\"username\", data.username);\n        setRegistered(true);\n        redirectToLogin();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleRegistrationChange = (e) => {\n    e.preventDefault();\n    setRegistrationForm({ ...registrationForm, [e.target.id]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // change this later its janky and probs unsafe\n    setState(true);\n  };\n\n  return (\n    <div>\n      {state ? (\n        <Login />\n      ) : (\n        <div>\n          <h1>Registration</h1>\n          <div>\n            <form className=\"registration-form\" onSubmit={handleRegistration}>\n              <label htmlFor=\"username\">\n                Username:{\" \"}\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  value={registrationForm.username}\n                  onChange={handleRegistrationChange}\n                />\n              </label>\n              <br />\n              <label htmlFor=\"email\">\n                Email:{\" \"}\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  value={registrationForm.email}\n                  onChange={handleRegistrationChange}\n                />\n              </label>\n              <br />\n              <label htmlFor=\"password\">\n                Password:{\" \"}\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={registrationForm.password}\n                  onChange={handleRegistrationChange}\n                />\n              </label>\n              <br />\n              <input\n                style={{ cursor: \"pointer\" }}\n                type=\"submit\"\n                value=\"Register\"\n                onSubmit={handleSubmit}\n              />\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport VirtualAssistant from \"./pages/VirtualAssistant/VirtualAssistant\";\nimport VoiceSynthesizer from \"./demo/VoiceSynthesizer/VoiceSynthesizer\";\nimport Login from \"./pages/Login/Login\";\nimport Register from \"./pages/Register/Register\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport TodoForm from \"./pages/Todos/TodoForm\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      {/* <SpeechContext.Provider value={{ state, setState, isBool, etc }}> */}\n      <Switch>\n        <Route path=\"/\" exact component={VirtualAssistant} />\n        {/* <Route exact path=\"/\">\n          <VirtualAssistant />\n        </Route> */}\n\n        <Route path=\"/voicesynthesizer\" component={VoiceSynthesizer} />\n\n        {/* <Route path=\"/voicesynthesizer\">\n          <VoiceSynthesizer />\n        </Route> */}\n\n        {/* <Route path=\"/login\" component={Login} /> */}\n        <Route path=\"/login\">\n          {/* {loggedIn ? <Redirect to=\"/\" /> : <VirtualAssistant />} */}\n          <Login />\n        </Route>\n\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n\n        <Route path=\"/dashboard\" component={Dashboard} />\n        {/* <Route path=\"/dashboard/:username\">\n          <Dashboard />\n        </Route> */}\n\n        <Route path=\"/todos\">\n          <TodoForm />\n        </Route>\n        {/* \n        <Route  path=\"/test\">\n          <Test />\n        </Route> */}\n      </Switch>\n      {/* </SpeechContext.Provider> */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}